// Star Wars themed ID generator for memorable character sheet URLs

const firstAdjectives = [
  // Technology & Space
  "quantum",
  "stellar",
  "cosmic",
  "astro",
  "galactic",
  "nebula",
  "plasma",
  "photon",
  "fusion",
  "orbital",
  "lunar",
  "solar",
  "void",
  "starborn",
  "celestial",
  "hyperspace",
  "warp",
  "sublight",
  "starlight",
  "zero-g",
  
  // Ships & Tech
  "armored",
  "turbo",
  "hyper",
  "mega",
  "ultra",
  "cyber",
  "mech",
  "synth",
  "holo",
  "nano",
  "micro",
  "macro",
  "binary",
  "digital",
  "virtual",
  "augmented",
  "neural",
  "bionic",
  "chrome",
  "titanium",
  
  // Force-like concepts
  "mystic",
  "ancient",
  "ethereal",
  "spectral",
  "phantom",
  "ghost",
  "shadow",
  "dark",
  "light",
  "neutral",
  "balanced",
  "fallen",
  "risen",
  "exiled",
  "lost",
  "forgotten",
  "hidden",
  "forbidden",
  "legendary",
  "mythic",
  
  // Factions & Military
  "rebel",
  "imperial",
  "rogue",
  "outlaw",
  "mercenary",
  "bounty",
  "corsair",
  "pirate",
  "smuggler",
  "trader",
  "elite",
  "strike",
  "tactical",
  "stealth",
  "recon",
  "assault",
  "siege",
  "vanguard",
  "sentinel",
  "guardian",
  
  // Planets & Environments
  "desert",
  "ice",
  "lava",
  "swamp",
  "forest",
  "ocean",
  "mountain",
  "canyon",
  "crater",
  "asteroid",
  "comet",
  "meteor",
  "volcanic",
  "frozen",
  "burning",
  "toxic",
  "radiant",
  "crystalline",
  "metallic",
  "gaseous",
  
  // Colors & Materials
  "crimson",
  "azure",
  "emerald",
  "golden",
  "silver",
  "obsidian",
  "sapphire",
  "ruby",
  "amber",
  "jade",
  "onyx",
  "cobalt",
  "scarlet",
  "violet",
  "indigo",
  "neon",
  "iridescent",
  "prismatic",
  "opalescent",
  "luminous",
];

const secondAdjectives = [
  // Actions & States
  "racing",
  "soaring",
  "diving",
  "gliding",
  "hunting",
  "prowling",
  "stalking",
  "striking",
  "defending",
  "attacking",
  "scanning",
  "tracking",
  "targeting",
  "cloaking",
  "phasing",
  "shifting",
  "warping",
  "jumping",
  "drifting",
  "cruising",
  
  // Qualities
  "swift",
  "silent",
  "deadly",
  "cunning",
  "brave",
  "bold",
  "fearless",
  "relentless",
  "unstoppable",
  "invincible",
  "eternal",
  "infinite",
  "prime",
  "alpha",
  "omega",
  "ultimate",
  "supreme",
  "apex",
  "elite",
  "superior",
  
  // Tech States
  "powered",
  "charged",
  "enhanced",
  "modified",
  "upgraded",
  "overclocked",
  "boosted",
  "amplified",
  "calibrated",
  "synchronized",
  "encrypted",
  "shielded",
  "fortified",
  "reinforced",
  "hardened",
  "tempered",
  "forged",
  "engineered",
  "fabricated",
  "assembled",
  
  // Combat
  "striking",
  "blazing",
  "burning",
  "freezing",
  "shocking",
  "crushing",
  "piercing",
  "slashing",
  "blasting",
  "bombarding",
  "devastating",
  "annihilating",
  "obliterating",
  "dominating",
  "conquering",
  "triumphant",
  "victorious",
  "undefeated",
  "battleworn",
  "veteran",
  
  // Mystery
  "enigmatic",
  "mysterious",
  "cryptic",
  "arcane",
  "esoteric",
  "elusive",
  "phantom",
  "spectral",
  "ethereal",
  "transcendent",
  "ascended",
  "evolved",
  "awakened",
  "enlightened",
  "empowered",
  "blessed",
  "cursed",
  "haunted",
  "possessed",
  "chosen",
];

const nouns = [
  // Ships & Vehicles
  "starfighter",
  "cruiser",
  "destroyer",
  "dreadnought",
  "frigate",
  "corvette",
  "interceptor",
  "bomber",
  "transport",
  "shuttle",
  "freighter",
  "gunship",
  "dropship",
  "scout",
  "carrier",
  "battleship",
  "skiff",
  "speeder",
  "walker",
  "tank",
  
  // People & Roles
  "pilot",
  "ace",
  "captain",
  "commander",
  "admiral",
  "general",
  "trooper",
  "soldier",
  "warrior",
  "guardian",
  "sentinel",
  "scout",
  "sniper",
  "medic",
  "engineer",
  "technician",
  "hacker",
  "slicer",
  "smuggler",
  "bounty-hunter",
  "mercenary",
  "assassin",
  "spy",
  "infiltrator",
  "saboteur",
  
  // Force Users
  "knight",
  "master",
  "apprentice",
  "acolyte",
  "sage",
  "oracle",
  "prophet",
  "seer",
  "mystic",
  "monk",
  "hermit",
  "wanderer",
  "seeker",
  "keeper",
  "watcher",
  "protector",
  "defender",
  "champion",
  "chosen",
  "exile",
  
  // Creatures & Droids
  "droid",
  "android",
  "cyborg",
  "mech",
  "bot",
  "unit",
  "sentinel",
  "probe",
  "drone",
  "hawk",
  "falcon",
  "eagle",
  "phoenix",
  "dragon",
  "wolf",
  "panther",
  "tiger",
  "viper",
  "scorpion",
  "spider",
  
  // Weapons & Tech
  "blade",
  "saber",
  "blaster",
  "cannon",
  "rifle",
  "pistol",
  "laser",
  "plasma",
  "pulse",
  "beam",
  "ray",
  "torpedo",
  "missile",
  "bomb",
  "mine",
  "turret",
  "shield",
  "barrier",
  "matrix",
  "core",
  
  // Cosmic Objects
  "star",
  "nova",
  "supernova",
  "nebula",
  "galaxy",
  "comet",
  "asteroid",
  "meteor",
  "planet",
  "moon",
  "sun",
  "void",
  "rift",
  "wormhole",
  "singularity",
  "horizon",
  "eclipse",
  "constellation",
  "cluster",
  "system",
];

// Suffix patterns for extra variety
const ofTheNouns = [
  // Locations
  "rim",
  "core",
  "frontier",
  "expanse",
  "reaches",
  "quadrant",
  "sector",
  "system",
  "cluster",
  "belt",
  "field",
  "drift",
  "zone",
  "territory",
  "dominion",
  
  // Concepts
  "force",
  "balance",
  "order",
  "chaos",
  "destiny",
  "prophecy",
  "legacy",
  "empire",
  "republic",
  "alliance",
  "federation",
  "union",
  "syndicate",
  "cartel",
  "guild",
  
  // Elements
  "stars",
  "void",
  "abyss",
  "infinity",
  "eternity",
  "cosmos",
  "universe",
  "dimension",
  "reality",
  "nexus",
  "matrix",
  "grid",
  "network",
  "web",
  "storm",
];

/**
 * Generates a random Star Wars themed character ID
 * @returns {string} A random character ID
 */
export const generateCharacterId = (): string => {
  const adj1 = firstAdjectives[Math.floor(Math.random() * firstAdjectives.length)];
  const adj2 = secondAdjectives[Math.floor(Math.random() * secondAdjectives.length)];
  const mainNoun = nouns[Math.floor(Math.random() * nouns.length)];

  // 25% chance to add "of the [noun]" suffix for more epic names
  if (Math.random() < 0.25) {
    const suffixNoun = ofTheNouns[Math.floor(Math.random() * ofTheNouns.length)];
    return `${adj1}-${adj2}-${mainNoun}-of-the-${suffixNoun}`;
  }

  return `${adj1}-${adj2}-${mainNoun}`;
};
